"use strict";(self.webpackChunksolicy_documentation=self.webpackChunksolicy_documentation||[]).push([[382],{3905:function(e,t,a){a.d(t,{Zo:function(){return d},kt:function(){return v}});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),l=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=l(a),v=n,h=u["".concat(c,".").concat(v)]||u[v]||p[v]||i;return a?r.createElement(h,o(o({ref:t},d),{},{components:a})):r.createElement(h,o({ref:t},d))}));function v(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var l=2;l<i;l++)o[l]=a[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},4585:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var r=a(7462),n=a(3366),i=(a(7294),a(3905)),o=["components"],s={sidebar_position:1},c="Javascript",l={unversionedId:"learning/front-end/javascript",id:"learning/front-end/javascript",title:"Javascript",description:"What Is Javascript?",source:"@site/docs/learning/front-end/javascript.md",sourceDirName:"learning/front-end",slug:"/learning/front-end/javascript",permalink:"/learning/front-end/javascript",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Exercises",permalink:"/learning/starter/exercises"},next:{title:"React",permalink:"/learning/front-end/react"}},d=[{value:"What Is Javascript?",id:"what-is-javascript",children:[],level:2},{value:"Tutorials",id:"tutorials",children:[],level:2},{value:"For complete beginners",id:"for-complete-beginners",children:[{value:"JavaScript first steps",id:"javascript-first-steps",children:[],level:3},{value:"JavaScript building blocks",id:"javascript-building-blocks",children:[],level:3},{value:"Introducing JavaScript objects",id:"introducing-javascript-objects",children:[],level:3},{value:"Asynchronous JavaScript",id:"asynchronous-javascript",children:[],level:3},{value:"Client-side web APIs",id:"client-side-web-apis",children:[],level:3}],level:2},{value:"JavaScript guide",id:"javascript-guide",children:[],level:2},{value:"Intermediate",id:"intermediate",children:[{value:"Understanding client-side JavaScript frameworks",id:"understanding-client-side-javascript-frameworks",children:[],level:3},{value:"A re-introduction to JavaScript",id:"a-re-introduction-to-javascript",children:[],level:3},{value:"JavaScript data structures",id:"javascript-data-structures",children:[],level:3},{value:"Equality comparisons and sameness",id:"equality-comparisons-and-sameness",children:[],level:3},{value:"Closures",id:"closures",children:[],level:3}],level:2},{value:"Advanced",id:"advanced",children:[{value:"Strict mode",id:"strict-mode",children:[],level:3},{value:"JavaScript typed arrays",id:"javascript-typed-arrays",children:[],level:3},{value:"Memory Management",id:"memory-management",children:[],level:3},{value:"Concurrency model and Event Loop",id:"concurrency-model-and-event-loop",children:[],level:3}],level:2},{value:"Reference",id:"reference",children:[{value:"Standard objects",id:"standard-objects",children:[],level:3},{value:"Expressions and operators",id:"expressions-and-operators",children:[],level:3},{value:"Statements and declarations",id:"statements-and-declarations",children:[],level:3},{value:"Functions",id:"functions",children:[],level:3}],level:2}],p={toc:d};function u(e){var t=e.components,a=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"javascript"},"Javascript"),(0,i.kt)("h2",{id:"what-is-javascript"},"What Is Javascript?"),(0,i.kt)("p",null,"JavaScript (JS) is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions. While it is most well-known as the scripting language for Web pages, many non-browser environments also use it, such as Node.js, Apache CouchDB and Adobe Acrobat. JavaScript is a prototype-based, multi-paradigm, single-threaded, dynamic language, supporting object-oriented, imperative, and declarative (e.g. functional programming) styles. Read more about JavaScript."),(0,i.kt)("p",null,"This section is dedicated to the JavaScript language itself, and not the parts that are specific to Web pages or other host environments. For information about API specifics to Web pages, please see Web APIs and DOM."),(0,i.kt)("p",null,"The standards for JavaScript are the ECMAScript Language Specification (ECMA-262) and the ECMAScript Internationalization API specification (ECMA-402). The JavaScript documentation throughout MDN is based on the latest draft versions of ECMA-262 and ECMA-402. And in cases where some proposals for new ECMAScript features have already been implemented in browsers, documentation and examples in MDN articles may use some of those new features."),(0,i.kt)("p",null,'Do not confuse JavaScript with the Java programming language. Both "Java" and "JavaScript" are trademarks or registered trademarks of Oracle in the U.S. and other countries. However, the two programming languages have very different syntax, semantics, and use.'),(0,i.kt)("h2",{id:"tutorials"},"Tutorials"),(0,i.kt)("p",null,"Learn how to program in JavaScript with guides and tutorials."),(0,i.kt)("h2",{id:"for-complete-beginners"},"For complete beginners"),(0,i.kt)("p",null,"Head over to our Learning Area JavaScript topic if you want to learn JavaScript but have no previous experience with JavaScript or programming. The complete modules available there are as follows:"),(0,i.kt)("h3",{id:"javascript-first-steps"},"JavaScript first steps"),(0,i.kt)("p",null,'Answers some fundamental questions such as "what is JavaScript?", "what does it look like?", and "what can it do?", along with discussing key JavaScript features such as variables, strings, numbers, and arrays.'),(0,i.kt)("h3",{id:"javascript-building-blocks"},"JavaScript building blocks"),(0,i.kt)("p",null,"Continues our coverage of JavaScript's key fundamental features, turning our attention to commonly-encountered types of code blocks such as conditional statements, loops, functions, and events."),(0,i.kt)("h3",{id:"introducing-javascript-objects"},"Introducing JavaScript objects"),(0,i.kt)("p",null,"The object-oriented nature of JavaScript is important to understand if you want to go further with your knowledge of the language and write more efficient code, therefore we've provided this module to help you."),(0,i.kt)("h3",{id:"asynchronous-javascript"},"Asynchronous JavaScript"),(0,i.kt)("p",null,"Discusses asynchronous JavaScript, why it is important, and how it can be used to effectively handle potential blocking operations such as fetching resources from a server."),(0,i.kt)("h3",{id:"client-side-web-apis"},"Client-side web APIs"),(0,i.kt)("p",null,"Explores what APIs are, and how to use some of the most common APIs you'll come across often in your development work."),(0,i.kt)("h2",{id:"javascript-guide"},"JavaScript guide"),(0,i.kt)("p",null,"A much more detailed guide to the JavaScript language, aimed at those with previous programming experience either in JavaScript or another language."),(0,i.kt)("h2",{id:"intermediate"},"Intermediate"),(0,i.kt)("h3",{id:"understanding-client-side-javascript-frameworks"},"Understanding client-side JavaScript frameworks"),(0,i.kt)("p",null,"JavaScript frameworks are an essential part of modern front-end web development, providing developers with proven tools for building scalable, interactive web applications. This module gives you some fundamental background knowledge about how client-side frameworks work and how they fit into your toolset, before moving on to tutorial series covering some of today's most popular ones."),(0,i.kt)("h3",{id:"a-re-introduction-to-javascript"},"A re-introduction to JavaScript"),(0,i.kt)("p",null,"An overview for those who think they know about JavaScript."),(0,i.kt)("h3",{id:"javascript-data-structures"},"JavaScript data structures"),(0,i.kt)("p",null,"Overview of available data structures in JavaScript."),(0,i.kt)("h3",{id:"equality-comparisons-and-sameness"},"Equality comparisons and sameness"),(0,i.kt)("p",null,"JavaScript provides three different value-comparison operations: strict equality using ===, loose equality using ==, and the Object.is() method."),(0,i.kt)("h3",{id:"closures"},"Closures"),(0,i.kt)("p",null,"A closure is the combination of a function and the lexical environment within which that function was declared."),(0,i.kt)("h2",{id:"advanced"},"Advanced"),(0,i.kt)("p",null,"Inheritance and the prototype chain\nExplanation of the widely misunderstood and under-estimated prototype-based inheritance."),(0,i.kt)("h3",{id:"strict-mode"},"Strict mode"),(0,i.kt)("p",null,"Strict mode defines that you can not use any variable before initializing it. It is a restricted variant of ECMAScript 5, for faster performance and easier debugging."),(0,i.kt)("h3",{id:"javascript-typed-arrays"},"JavaScript typed arrays"),(0,i.kt)("p",null,"JavaScript typed arrays provide a mechanism for accessing raw binary data."),(0,i.kt)("h3",{id:"memory-management"},"Memory Management"),(0,i.kt)("p",null,"Memory life cycle and garbage collection in JavaScript."),(0,i.kt)("h3",{id:"concurrency-model-and-event-loop"},"Concurrency model and Event Loop"),(0,i.kt)("p",null,'JavaScript has a concurrency model based on an "event loop".'),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("p",null,"Browse the complete JavaScript reference documentation."),(0,i.kt)("h3",{id:"standard-objects"},"Standard objects"),(0,i.kt)("p",null,"Get to know standard built-in objects Array, Boolean, Date, Error, Function, JSON, Math, Number, Object, RegExp, String, Map, Set, WeakMap, WeakSet, and others."),(0,i.kt)("h3",{id:"expressions-and-operators"},"Expressions and operators"),(0,i.kt)("p",null,"Learn more about the behavior of JavaScript's operators instanceof, typeof, new, this, the operator precedence, and more."),(0,i.kt)("h3",{id:"statements-and-declarations"},"Statements and declarations"),(0,i.kt)("p",null,"Learn how do-while, for-in, for-of, try-catch, let, var, const, if-else, switch, and more JavaScript statements and keywords work."),(0,i.kt)("h3",{id:"functions"},"Functions"),(0,i.kt)("p",null,"Learn how to work with JavaScript's functions to develop your applications."))}u.isMDXComponent=!0}}]);